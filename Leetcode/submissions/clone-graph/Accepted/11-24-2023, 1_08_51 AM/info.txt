{"id":1105048433,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1700768331,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/1105048433/","is_pending":"Not Pending","title":"Clone Graph","memory":"42.1 MB","code":"/*\n// Definition for a Node.\nclass Node {\n    public int val;\n    public List<Node> neighbors;\n    public Node() {\n        val = 0;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val) {\n        val = _val;\n        neighbors = new ArrayList<Node>();\n    }\n    public Node(int _val, ArrayList<Node> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n}\n*/\n\nclass Solution {\n    Node[] visited = new Node[101];\n    public Node cloneGraph(Node node) {\n        if(node == null) return null;\n\n        if(visited[node.val] != null) return visited[node.val];\n        visited[node.val] = new Node(node.val);\n        for(Node n: node.neighbors) visited[node.val].neighbors.add(cloneGraph(n));\n\n        return visited[node.val];\n    }\n}","compare_result":"1111111111111111111111","title_slug":"clone-graph","has_notes":false,"flag_type":1}