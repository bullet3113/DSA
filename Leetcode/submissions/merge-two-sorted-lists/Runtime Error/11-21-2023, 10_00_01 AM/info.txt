{"id":1103177814,"lang":"java","lang_name":"Java","time":"2 weeks, 2 days","timestamp":1700541001,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/1103177814/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode mergeTwoLists(ListNode list1, ListNode list2) {\n        \n        if(list1 == null && list2 == null) return list1;\n        if(list1 != null && list2 == null) return list1;\n        if(list1 == null && list2 != null) return list2;\n        if(list1.val > list2.val) return mergeTwoLists(list2, list1);\n\n        ListNode curr = list1;\n        while(curr.next != null) {\n            int d1 = curr.val;\n\n            if(curr.next.val <= list2.val) {\n                curr = curr.next;\n            } else {\n                ListNode temp = curr.next;\n                curr.next = list2;\n                list2 = list2.next;\n                curr.next.next = temp;\n            }\n        }\n\n        curr.next = list2;\n\n        return list1;\n    }\n}","compare_result":"1111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}