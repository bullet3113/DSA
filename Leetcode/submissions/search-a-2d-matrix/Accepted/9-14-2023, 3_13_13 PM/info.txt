{"id":1049160618,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1694684593,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1049160618/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"41.3 MB","code":"class Solution {\n    public boolean searchMatrix(int[][] matrix, int target) {\n        int m = matrix.length;\n        int n = matrix[0].length;\n\n        for(int i = 0; i < m; i++) {\n            if(bSearch(matrix, i, target)) return true;\n        }\n\n        return false;\n    }\n\n    boolean bSearch(int[][] mat, int row, int t) {\n        int i = 0, j = mat[0].length-1;\n\n        while(i <= j) {\n            int mid = i + (j - i) / 2;\n\n            if(mat[row][mid] > t) j = mid - 1;\n            else if(mat[row][mid] < t) i = mid + 1;\n            else return true;\n        }\n\n        return false;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}