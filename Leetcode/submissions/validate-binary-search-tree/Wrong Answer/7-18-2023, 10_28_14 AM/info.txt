{"id":997253771,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1689656294,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/997253771/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return helper(root, Integer.MIN_VALUE, Integer.MAX_VALUE);\n    }\n\n    boolean helper(TreeNode root, int min, int max) {\n        if(root == null) return true;\n\n        if(root.val < min || root.val > max) return false;\n\n        return helper(root.left, min, root.val) && helper(root.right, root.val, max);\n    }\n}","compare_result":"1111000110111111110111111111111111111111101111111111111111011110000111111111110011","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}