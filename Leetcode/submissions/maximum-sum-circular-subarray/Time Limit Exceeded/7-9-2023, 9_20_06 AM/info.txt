{"id":989840259,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1688874606,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/989840259/","is_pending":"Not Pending","title":"Maximum Sum Circular Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubarraySumCircular(int[] nums) {\n        // we have to start our index from each element\n        int n = nums.length;\n        int global_max = Integer.MIN_VALUE;\n\n        for(int i = 0; i < n; i++) {\n            int curr_max = 0;\n            int si = i;\n            int ei = n + i;\n\n            while(si < ei) {\n                curr_max += nums[si % n];\n                \n                global_max = Math.max(global_max, curr_max);\n                curr_max = Math.max(curr_max, 0);\n                si++;\n            }\n        }\n        return global_max;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111000000000","title_slug":"maximum-sum-circular-subarray","has_notes":false,"flag_type":1}