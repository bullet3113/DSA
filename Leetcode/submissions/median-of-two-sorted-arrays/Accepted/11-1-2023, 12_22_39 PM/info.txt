{"id":1088924708,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1698821559,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1088924708/","is_pending":"Not Pending","title":"Median of Two Sorted Arrays","memory":"45 MB","code":"class Solution {\n    public double findMedianSortedArrays(int[] nums1, int[] nums2) {\n        \n        if(nums1.length > nums2.length) return findMedianSortedArrays(nums2, nums1);\n\n        int x = nums1.length;\n        int y = nums2.length;\n\n        int i = 0;\n        int j = x;\n\n        while(i <= j) {\n            int partitionX = i + (j - i) / 2;\n            int partitionY = (x + y + 1) / 2 - partitionX;\n\n            int maxLeftX = (partitionX == 0) ? Integer.MIN_VALUE : nums1[partitionX - 1];\n            int minRightX = (partitionX == x) ? Integer.MAX_VALUE : nums1[partitionX];\n\n            int maxLeftY = (partitionY == 0) ? Integer.MIN_VALUE : nums2[partitionY - 1];\n            int minRightY = (partitionY == y) ? Integer.MAX_VALUE : nums2[partitionY];\n\n            if(maxLeftX <= minRightY && maxLeftY <= minRightX) {\n\n                if((x + y) % 2 == 0) return ((double)Math.max(maxLeftX, maxLeftY) + Math.min(minRightX, minRightY)) / 2;\n                else return (double)Math.max(maxLeftX, maxLeftY);\n            } else if(maxLeftX > minRightY) {\n                j = partitionX - 1;\n            } else {\n                i = partitionX + 1;\n            }\n        }\n\n        return (double) -1;\n    }\n}","compare_resulttitle_slug":"median-of-two-sorted-arrays","has_notes":false,"flag_type":1}