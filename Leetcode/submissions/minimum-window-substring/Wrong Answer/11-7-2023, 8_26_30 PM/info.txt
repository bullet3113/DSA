{"id":1093673422,"lang":"java","lang_name":"Java","time":"4 weeks, 1 day","timestamp":1699368990,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1093673422/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"N/A","code":"class Solution {\n    public String minWindow(String s, String t) {\n\n        char[] charsT = t.toCharArray();\n        Map<Character, Integer> map = new HashMap<>();\n\n        for(int i = 0; i < charsT.length; i++) {\n            map.put(charsT[i], map.getOrDefault(charsT[i], 0) + 1);\n        }   \n\n        char[] chars = s.toCharArray();\n\n        int i = 0;\n        int j = 0;\n        int n = chars.length;\n        int min = n;\n        int unique = 0;\n        int start = 0;\n\n        while(i < n) {\n            char ch = chars[i];\n\n            if(map.containsKey(ch)) {\n                map.put(ch, map.get(ch) - 1);\n                if(map.get(ch) == 0) {\n                    unique++;\n                }\n            }\n\n            while(unique == map.size() && j < i) {\n                if(unique == map.size()) {\n                    start = j;\n                    min = Math.min(min, i - j + 1);\n                }\n\n                char temp = chars[j];\n\n                if(map.containsKey(temp)) {\n                    map.put(temp, map.get(temp) + 1);\n                    if(map.get(temp) > 0) unique--;\n                }\n                j++;\n            }\n\n            i++;\n        }\n\n        // System.out.println(start + \" \" + min);\n        if(charsT.length > n) return \"\";\n        return s.substring(start, start + min);\n    }\n}","compare_result":"111010001100011111111111111101101111111111000111011000100100010000001000011001111000010010010001001110111110100011100111000011001110111001111011111110111000011000000011001111111100111111110010011111101100100010001111101110110000001000000000000001101001010000000000001","title_slug":"minimum-window-substring","has_notes":false,"flag_type":1}