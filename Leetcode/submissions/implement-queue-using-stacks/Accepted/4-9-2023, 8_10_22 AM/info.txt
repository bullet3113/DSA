{"id":930424820,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1681008022,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/930424820/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"42.3 MB","code":"class MyQueue {\n\n    Stack<Integer> s1;\n    Stack<Integer> s2;\n    int size;\n    int front;\n\n    public MyQueue() {\n        s1 = new Stack<>();\n        s2 = new Stack<>();\n    }\n    \n    public void push(int x) {\n        if(empty()) {\n            s1.push(x);\n            front = s1.peek();\n        } else {\n            s1.push(x);\n        }\n        \n        size++;    \n    }\n    \n    public int pop() {\n        int temp = size;\n        // storing the elements reversly in another stack\n        while(temp > 0) {\n            s2.push(s1.pop());\n            temp--;\n        }\n\n        // popping out the first element\n        int removed = s2.pop();\n        size--;\n        // assigning new peek element\n        if(size > 0)\n            front = s2.peek();\n        else\n            front = 0;\n        // transfering elements back to original stack\n        temp = size;\n        while(temp > 0) {\n            s1.push(s2.pop());\n            temp--;\n        }\n        return removed;\n    }\n    \n    public int peek() {\n        return front;\n    }\n    \n    public boolean empty() {\n        return size == 0;\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}