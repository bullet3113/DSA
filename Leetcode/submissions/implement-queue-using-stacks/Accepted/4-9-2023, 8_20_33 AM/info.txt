{"id":930438940,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1681008633,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/930438940/","is_pending":"Not Pending","title":"Implement Queue using Stacks","memory":"40.7 MB","code":"class MyQueue {\n\n    Stack<Integer> s1;\n    Stack<Integer> s2;\n\n    public MyQueue() {\n        s1 = new Stack<>();\n        s2 = new Stack<>();\n    }\n    \n    public void push(int x) {\n            s1.push(x);\n    }\n    \n    public int pop() {\n        // storing the elements reversly in another stack\n        while(!s1.isEmpty()) {\n            s2.push(s1.pop());\n        }\n\n        // popping out the first element\n        int removed = s2.pop();\n        // transfering elements back to original stack\n        while(!s2.isEmpty()) {\n            s1.push(s2.pop());\n        }\n        return removed;\n    }\n    \n    public int peek() {\n         while(!s1.isEmpty()) {\n            s2.push(s1.pop());\n        }\n\n        // popping out the first element\n        int peeked = s2.peek();\n        // transfering elements back to original stack\n        while(!s2.isEmpty()) {\n            s1.push(s2.pop());\n        }\n        return peeked;    }\n    \n    public boolean empty() {\n        return s1.isEmpty();\n    }\n}\n\n/**\n * Your MyQueue object will be instantiated and called as such:\n * MyQueue obj = new MyQueue();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.peek();\n * boolean param_4 = obj.empty();\n */","compare_result":"1111111111111111111111","title_slug":"implement-queue-using-stacks","has_notes":false,"flag_type":1}