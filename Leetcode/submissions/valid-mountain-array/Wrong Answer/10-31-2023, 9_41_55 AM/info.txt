{"id":1088057232,"lang":"java","lang_name":"Java","time":"1 month, 1 week","timestamp":1698725515,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1088057232/","is_pending":"Not Pending","title":"Valid Mountain Array","memory":"N/A","code":"class Solution {\n    public boolean validMountainArray(int[] arr) {\n        int n = arr.length;\n\n        if(n < 3) return false;\n\n        int start = 0, end = n-1;\n\n        while(start < end) {\n            if(arr[start] < arr[start+1]) start++;\n            else if(arr[start] == arr[start+1]) return false;\n\n            if(arr[end] < arr[end-1]) end--;\n            else if(arr[end] == arr[end-1]) return false;\n\n            if(end-1 == start+1 && arr[start] > arr[start+1] && arr[end] > arr[end-1]) return false;\n        }\n\n        if(start == end) return true;\n\n        return false;\n\n        // bruteforce\n        // iterate till increasing\n        // then iterate till decreasing\n        // if at any point value got greater in decreasing iteration \n        // return false\n    }\n}","compare_result":"11111100110000000000000000000000000000000000000000000","title_slug":"valid-mountain-array","has_notes":false,"flag_type":1}