{"id":1093344674,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1699333714,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1093344674/","is_pending":"Not Pending","title":"Maximum Points You Can Obtain from Cards","memory":"55.7 MB","code":"class Solution {\n    public int maxScore(int[] cardPoints, int k) {\n        \n        // getting the total points\n        int totalPoints = 0;\n        for(int point: cardPoints) totalPoints += point;\n\n        int j = 0;\n        int i = 0;\n        int n = cardPoints.length;\n        if(n == k) return totalPoints;\n        k = n - k;\n        int currSum = 0;\n        int max = -1;\n    \n        while(i < n) {\n            int val = cardPoints[i];\n            currSum += val;\n\n            int currWindowSize = i - j + 1;\n            \n            if(currWindowSize > k) {\n                currSum -= cardPoints[j];\n                j++;\n            }\n\n            currWindowSize = i - j + 1;\n            if(currWindowSize == k)\n            max = Math.max(max, (totalPoints - currSum));\n            i++;\n        }\n\n        return max;\n    }\n}\n\n// n = cards;\n// a[i] = cardpoints\n\n// In one step a card can be chosen from start or end\n// only k cards can be chosen\n\n// score  = sum of card points chosen\n\n// return max score","compare_result":"1111111111111111111111111111111111111111","title_slug":"maximum-points-you-can-obtain-from-cards","has_notes":false,"flag_type":1}