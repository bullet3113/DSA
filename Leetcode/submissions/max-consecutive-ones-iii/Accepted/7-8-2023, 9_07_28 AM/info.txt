{"id":988998675,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1688787448,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/988998675/","is_pending":"Not Pending","title":"Max Consecutive Ones III","memory":"46.6 MB","code":"class Solution {\n    public int longestOnes(int[] nums, int k) {\n        int n = nums.length;\n        int max = 0;\n        \n        int j = 0; // first pointer\n\n        for(int i = 0; i < n; i++) {\n            int ele = nums[i];\n\n            if(ele == 0 && k >= 0) k--; // decreamenting k if we found 0\n\n            // if k goes -ve then we move first pointer to look for 0 from left\n            while(k < 0 && j <= i) {\n                if(nums[j] == 0) k++;\n                j++;\n            }\n\n            if(k >= 0) // not cosidering the -ve case\n                max = Math.max(max, i - j + 1);\n        }\n\n        return max;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"max-consecutive-ones-iii","has_notes":false,"flag_type":1}