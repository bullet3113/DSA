{"id":941481396,"lang":"java","lang_name":"Java","time":"7Â months, 1Â week","timestamp":1682762113,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/941481396/","is_pending":"Not Pending","title":"Subsets","memory":"42.7 MB","code":"class Solution {\n    // public List<List<Integer>> subsets(int[] nums) {\n    //     return helper(nums, 0, new ArrayList<>());\n    // }\n\n    // List<List<Integer>> helper(int[] nums, int i, ArrayList<Integer> ans) {\n    //     List<List<Integer>> list = new ArrayList<>();\n    //     if(i == nums.length) {\n    //         list.add(ans);\n    //         return list;\n    //     }\n\n    //     // //exclude case\n    //     // ArrayList<Integer> exclude_case = helper(nums, i+1, ans);\n\n    //     // //include case\n    //     // ArrayList<Integer> include_case = helper(nums, i+1, ans);\n\n    //     list.add(helper(nums, i+1, ans));\n    //     list.add(helper(nums, i+1, ans.add(nums[i])));\n\n    //     return list;\n        \n    // }\n\n    public List<List<Integer>> subsets(int[] nums) {\n    List<List<Integer>> list = new ArrayList<>();\n    // Arrays.sort(nums);\n    backtrack(list, new ArrayList<>(), nums, 0);\n    return list;\n}\n\nprivate void backtrack(List<List<Integer>> list , List<Integer> tempList, int [] nums, int start){\n    list.add(new ArrayList<>(tempList));\n    for(int i = start; i < nums.length; i++){\n        tempList.add(nums[i]);\n        backtrack(list, tempList, nums, i + 1);\n        tempList.remove(tempList.size() - 1);\n    }\n}\n}","compare_result":"1111111111","title_slug":"subsets","has_notes":false,"flag_type":1}