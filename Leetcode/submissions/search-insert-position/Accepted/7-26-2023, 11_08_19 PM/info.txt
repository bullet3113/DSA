{"id":1004676668,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690393099,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1004676668/","is_pending":"Not Pending","title":"Search Insert Position","memory":"43.4 MB","code":"class Solution {\n    public int searchInsert(int[] nums, int target) {\n        int i = 0, j = nums.length-1;\n\n        while(i <= j) {\n            int mid = i + (j - i) / 2;\n\n            if(nums[mid] == target) return mid;\n            else if(nums[mid] > target) {\n                if(mid > 0 && nums[mid - 1] < target) return mid;\n                else j = mid - 1;\n            } else if(nums[mid] < target) {\n                if(mid < nums.length-1 && nums[mid + 1] > target) return mid + 1;\n                else i = mid + 1;\n            }\n        }\n\n        if(target < nums[0]) return 0;\n        return nums.length;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-insert-position","has_notes":false,"flag_type":1}