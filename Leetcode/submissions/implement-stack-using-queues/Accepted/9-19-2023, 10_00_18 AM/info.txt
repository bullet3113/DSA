{"id":1053207474,"lang":"java","lang_name":"Java","time":"2 months, 2 weeks","timestamp":1695097818,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1053207474/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"40.4 MB","code":"class MyStack {\n    Queue<Integer> q1;\n    Queue<Integer> q2;\n\n    public MyStack() {\n        q1 = new LinkedList<>();\n        q2 = new LinkedList<>();\n    }\n    \n    public void push(int x) {\n        q1.add(x);\n        while(!q2.isEmpty()) q1.add(q2.remove());\n        while(!q1.isEmpty()) q2.add(q1.remove());\n    }\n    \n    public int pop() {\n        int popped = q2.remove();\n        // while(!q2.isEmpty()) q1.add(q2.remove());\n        return popped;\n    }\n    \n    public int top() {\n        return q2.peek();\n    }\n    \n    public boolean empty() {\n        return q2.isEmpty();\n    }\n}\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack obj = new MyStack();\n * obj.push(x);\n * int param_2 = obj.pop();\n * int param_3 = obj.top();\n * boolean param_4 = obj.empty();\n */","compare_result":"111111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}