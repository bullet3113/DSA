{"id":1005043443,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690435480,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1005043443/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"41.2 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public void flatten(TreeNode root) {\n        helper(root);\n    }\n\n    TreeNode helper(TreeNode node) {\n        if(node == null || (node.left == null && node.right == null)) return node;\n\n        TreeNode left = helper(node.left);\n        TreeNode right = helper(node.right);\n\n        node.left = null;\n        node.right = left;\n\n        TreeNode curr = node;\n\n        while(curr.right != null) curr = curr.right;\n\n        curr.right = right;\n\n        return node;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}