{"id":999892239,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1689915974,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/999892239/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"43.8 MB","code":"class Solution {\n    public int evalRPN(String[] tokens) {\n        // using stacks\n\n        Stack<Integer> stack = new Stack<>();\n        int n = tokens.length;\n\n        for(int i = 0; i < n; i++) {\n            String str = tokens[i];\n\n            if(str.equals(\"+\")) {\n                int b = stack.pop();\n                int a = stack.pop();\n                stack.push(a + b);\n            } else if(str.equals(\"*\")) {\n                int b = stack.pop();\n                int a = stack.pop();\n                stack.push(a * b);\n            } else if(str.equals(\"/\")) {\n                int b = stack.pop();\n                int a = stack.pop();\n                stack.push(a / b);\n            } else if(str.equals(\"-\")) {\n                int b = stack.pop();\n                int a = stack.pop();\n                stack.push(a - b);\n            } else stack.push(Integer.parseInt(str));\n        }\n        \n        return stack.pop();\n    }\n}","compare_result":"111111111111111111111","title_slug":"evaluate-reverse-polish-notation","has_notes":false,"flag_type":1}