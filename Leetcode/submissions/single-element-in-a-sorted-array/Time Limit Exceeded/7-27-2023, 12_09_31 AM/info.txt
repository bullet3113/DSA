{"id":1004731531,"lang":"java","lang_name":"Java","time":"4Â months, 1Â week","timestamp":1690396771,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1004731531/","is_pending":"Not Pending","title":"Single Element in a Sorted Array","memory":"N/A","code":"class Solution {\n    public int singleNonDuplicate(int[] nums) {\n        int n = nums.length;\n        int i = 0, j = n-1;\n        boolean check = true;\n\n        if(n > 2) {\n            if(nums[0] != nums[1] && nums[1] == nums[2]) return nums[0];\n            else if(nums[n-1] != nums[n-2] && nums[n-2] == nums[n-3]) return nums[n-1];\n        }\n        while(i <= j) {\n            int mid = i + (j - i) / 2;\n\n            if(mid > 0 && nums[mid] == nums[mid-1]) i++;\n            else if(mid < n-1 && nums[mid] == nums[mid+1]) j--;\n            else return nums[mid];\n\n            if(i > j && check) {\n                i = 0;\n                j = n/2 + 1;\n                check = false;\n            } else if(i > j && !check) {\n                i = n/2 + 1;\n                j = n-1;\n            }\n        }\n\n        return -1;\n    }\n}","compare_result":"111111111111000","title_slug":"single-element-in-a-sorted-array","has_notes":false,"flag_type":1}