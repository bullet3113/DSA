{"id":1004706069,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690395037,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1004706069/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"N/A","code":"class Solution {\n    public int search(int[] nums, int target) {\n        // finding the pivot index;\n\n        int pivotIdx = findPivot(nums);\n\n        // finding the element\n        int eleIdx = bSearch(nums, 0, pivotIdx, target);\n\n        if(eleIdx == -1) eleIdx = bSearch(nums, pivotIdx+1, nums.length-1, target);\n\n        return eleIdx;\n    }\n\n    int bSearch(int[] nums, int i, int j, int target) {\n        \n        while(i <= j) {\n            int mid = i + (j - i) / 2;\n\n            if(nums[mid] > target) {\n                j = mid - 1;\n            } else if(nums[mid] < target) {\n                i = mid + 1;\n            } else return mid;\n        }\n\n        return -1;\n    }\n\n    int findPivot(int[] nums) {\n        int n = nums.length;\n        int i = 1, j = n-2;\n\n        if(n > 1)\n        if(nums[0] > nums[i]) return 0;\n\n        while(i <= j) {\n            int mid = i + (j - i) / 2;\n\n            if(mid > 0 && mid < n - 1) {\n                if(nums[mid] > nums[mid-1] && nums[mid] > nums[mid+1]) return mid;\n                else if(nums[mid] > nums[mid-1] && nums[mid] < nums[mid+1] && nums[mid] > nums[0]) i = mid + 1;\n                else if(nums[mid] > nums[mid-1] && nums[mid] < nums[mid+1] && nums[mid] < nums[0]) j = mid - 1;\n            } \n        }\n\n        return n - 1;\n    }\n}","compare_result":"111111111111111111111111111111111111111111110000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}