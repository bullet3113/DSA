{"id":1104924786,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1700755119,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1104924786/","is_pending":"Not Pending","title":"Permutations","memory":"44.3 MB","code":"class Solution {\n    public List<List<Integer>> permute(int[] nums) {\n        \n        int n = nums.length;\n        List<List<Integer>> list = new ArrayList<>();\n\n        helper(nums, n, new ArrayList<>(), list, new boolean[n]);\n        return list;\n    }\n\n    void helper(int[] nums, int n, List<Integer> temp, List<List<Integer>> list, boolean[] vis) {\n\n        if(temp.size() == n) {\n            list.add(new ArrayList(temp));\n            return;\n        } \n\n        for(int i = 0; i < n; i++) {\n            if(vis[i]) continue;\n            vis[i] = true;\n            temp.add(nums[i]);\n            helper(nums, n, temp, list, vis);\n            vis[i] = false;\n            temp.remove(temp.size() - 1);\n        }\n    }\n}","compare_result":"11111111111111111111111111","title_slug":"permutations","has_notes":false,"flag_type":1}