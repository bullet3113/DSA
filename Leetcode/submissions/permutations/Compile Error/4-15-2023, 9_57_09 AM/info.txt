{"id":933934670,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1681532829,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/933934670/","is_pending":"Not Pending","title":"Permutations","memory":"N/A","code":"// class Solution {\n//     public List<List<Integer>> permute(int[] nums) {\n        \n//     }\n// }\n\nclass Solution { void solve(int[] nums, int i, List<List<Integer>> result) { //base case if (i == nums.length) { List<Integer> al = Arrays.asList(nums); result.add(al); return; } for (int j = i; j < nums.length; j++) { int tmp = nums[i]; nums[i] = nums[j]; nums[j] = tmp; solve(nums, i + 1, result); tmp = nums[i]; nums[i] = nums[j]; nums[j] = tmp; } } public List<List<Integer>> permute(int[] nums) { List<List<Integer>> result = new ArrayList<>(); solve(nums, 0, result); return result; } }","compare_result":null,"title_slug":"permutations","has_notes":false,"flag_type":1}