{"id":1001494547,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1690084130,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/1001494547/","is_pending":"Not Pending","title":"Binary Tree Maximum Path Sum","memory":"46.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int maxPathSum(TreeNode node) {\n        int max[] = {Integer.MIN_VALUE};\n\t\thelper(node, max);\n\t\treturn max[0];\n    }\n\n    int helper(TreeNode node, int[] max) {\n\t\tif(node == null)\n\t\t\treturn 0;\n\n\t\tint lSum = Math.max(0, helper(node.left, max));\n\t\tint rSum = Math.max(0, helper(node.right, max));\n\t\tmax[0] = Math.max(max[0], node.val + lSum + rSum);\n\t\treturn node.val + Math.max(lSum, rSum);\n\t}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-maximum-path-sum","has_notes":false,"flag_type":1}