{"id":1000075992,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1689933810,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1000075992/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public List<List<Integer>> zigzagLevelOrder(TreeNode root) {\n        \n        List<List<Integer>> list = new ArrayList<>();\n        Queue<TreeNode> q = new LinkedList<>();\n        q.add(root);\n        boolean isRight = true;\n\n        while(!q.isEmpty()) {\n            int size = q.size();\n\n            List<Integer> temp = new ArrayList<>();\n            while(size > 0) {\n                TreeNode dq = q.remove();\n                if(dq != null)\n                temp.add(dq.val);\n                \n                if(dq != null) {\n                    if(isRight) {\n                        if(dq.right != null) q.add(dq.right);\n                        if(dq.left != null) q.add(dq.left);\n                  } else {\n                        if(dq.left != null) q.add(dq.left);\n                        if(dq.right != null) q.add(dq.right);\n                 }\n                }\n\n                size--;\n            }\n\n            if(temp.size() > 0)\n            list.add(new ArrayList<>(temp));\n            if(isRight) isRight = false;\n            else isRight = true;\n        }\n\n        return list;\n    }\n}","compare_result":"111111101101101000001000000100000","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}