{"id":1047144480,"lang":"java","lang_name":"Java","time":"2 months, 3 weeks","timestamp":1694495084,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/1047144480/","is_pending":"Not Pending","title":"Combination Sum II","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> combinationSum2(int[] candidates, int target) {\n        List<List<Integer>> list = new ArrayList<>();\n        Arrays.sort(candidates);\n        helper(candidates, target, 0, 0, new ArrayList<>(), list);\n\n        return list;\n    }\n\n    void helper(int[] a, int t, int i, int sum, List<Integer> temp, List<List<Integer>> list) {\n\n        if(sum > t) return;\n        if(sum == t) {\n            // Collections.sort(temp);\n            if(!list.contains(temp))\n            list.add(new ArrayList(temp));\n            return;\n        }\n\n        if(i == a.length) return;\n\n        temp.add(a[i]);\n        helper(a, t, i+1, sum + a[i], temp, list);\n        temp.remove(temp.size() - 1);\n\n        helper(a, t, i+1, sum, temp, list);\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110000","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}