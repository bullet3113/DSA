{"id":943089296,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1683013041,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/943089296/","is_pending":"Not Pending","title":"Combination Sum II","memory":"43.3 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum2(int[] candidates, int target) {\n        List<List<Integer>> list = new ArrayList<>();\n        Arrays.sort(candidates);\n        helper(candidates, target, 0, list, new ArrayList<>());\n        return list;\n    }\n\n    void helper(int a[], int sum, int i, List<List<Integer>> list, List<Integer> temp) {\n        if(sum == 0) {\n            list.add(new ArrayList<>(temp));\n            return;\n        }\n\n        // if(i == a.length || sum < 0)\n        //     return;\n\n        for(int start = i; start < a.length; start++) {\n            if(start > i && a[start] == a[start-1]) continue;\n            if(a[start] > sum) break;\n            temp.add(a[start]);\n            helper(a, sum-a[start], start+1, list, temp);\n            temp.remove(temp.size() - 1);\n            // helper(a, sum, start, list, temp);\n        }\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum-ii","has_notes":false,"flag_type":1}