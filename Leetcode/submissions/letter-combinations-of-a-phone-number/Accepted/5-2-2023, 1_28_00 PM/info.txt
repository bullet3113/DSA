{"id":943097276,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1683014280,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/943097276/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"42.8 MB","code":"class Solution {\n    public List<String> letterCombinations(String digits) {\n        List<String> list = new ArrayList<>();\n        helper(digits, \"\", list, digits.length());\n        return list;\n    }\n\n    void helper(String up, String p, List<String> list, int len) {\n        if(up.isEmpty()) {\n            if(p.length() == len && !p.isEmpty())\n            list.add(p);\n            return;\n        }\n\n        int n = up.charAt(0) - '0';\n        String c_map = map(n);\n        for(int i = 0; i < c_map.length(); i++) {\n            helper(up.substring(1), p + c_map.charAt(i), list, len);\n            helper(up.substring(1), p, list, len);\n        }\n    }\n\n    String map(int n) {\n        String a[] = {\"abc\", \"def\", \"ghi\", \"jkl\", \"mno\", \"pqrs\", \"tuv\", \"wxyz\"};\n        return a[n-2];\n    }\n}","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number","has_notes":false,"flag_type":1}