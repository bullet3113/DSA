{"id":1005284667,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690458512,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1005284667/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"42 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public int diameterOfBinaryTree(TreeNode root) {\n        \n        if(root == null) return 0;\n\n        int left = height(root.left);\n        int right = height(root.right);\n\n        return Math.max(left + right, Math.max(diameterOfBinaryTree(root.left), diameterOfBinaryTree(root.right)));\n    }\n\n    int height(TreeNode root) {\n        if(root == null) return 0;\n\n        return Math.max(height(root.left), height(root.right)) + 1;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}