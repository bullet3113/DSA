{"id":954276726,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1684641668,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/954276726/","is_pending":"Not Pending","title":"Combinations","memory":"45.7 MB","code":"class Solution {\n    public List<List<Integer>> combine(int n, int k) {\n        List<List<Integer>> list = new ArrayList<>();\n        helper(n, k, list, new ArrayList<>(), 1);\n        return list;\n    }\n\n    void helper(int n, int k, List<List<Integer>> list, ArrayList<Integer> temp, int start) {\n\n        if(k == 0) {\n            list.add(new ArrayList<>(temp));\n            return;\n        }\n\n        for(int i = start; i <= n; i++) {\n            // if(temp.contains(i)) continue;\n            // if(temp.size() > 0 && temp.get(0) > i) continue;\n            temp.add(i);\n            helper(n, k-1, list, temp, i + 1);\n            temp.remove(temp.size() - 1);\n        }\n    }\n}","compare_result":"111111111111111111111111111","title_slug":"combinations","has_notes":false,"flag_type":1}