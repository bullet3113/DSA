{"id":1005387354,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690467976,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/1005387354/","is_pending":"Not Pending","title":"Find Resultant Array After Removing Anagrams","memory":"44.2 MB","code":"class Solution {\n    public List<String> removeAnagrams(String[] words) {\n        List<String> list = new ArrayList<>();\n        int n = words.length;\n        boolean[] vis = new boolean[n];\n\n        for(int i = 0; i < n; i++) {\n            Map<Character, Integer> map = new HashMap<>();\n            if(!vis[i]) {\n                String word = words[i];\n                for(int j = 0; j < word.length(); j++) {\n                    char ch = word.charAt(j);\n                    map.put(ch, map.getOrDefault(ch, 0) + 1);\n                }\n                vis[i] = true;\n                list.add(word);\n            }\n\n            for(int j = i + 1; j < n; j++) {\n                if(vis[j]) continue;\n                Map<Character, Integer> temp = new HashMap<>();\n                String word = words[j];\n                for(int k = 0; k < word.length(); k++) {\n                    char ch = word.charAt(k);\n                    temp.put(ch, temp.getOrDefault(ch, 0) + 1);\n                }\n\n                if(map.equals(temp)) {\n                    vis[j] = true; \n                } else break;\n            }\n        }\n        return list;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-resultant-array-after-removing-anagrams","has_notes":false,"flag_type":1}