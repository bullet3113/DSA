{"id":1003215412,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1690259742,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1003215412/","is_pending":"Not Pending","title":"LRU Cache","memory":"N/A","code":"class LRUCache {\n    int capacity;\n    Map<Integer, Integer> map = new HashMap<>();\n    Map<Integer, Integer> records = new HashMap<>();\n    ArrayList<Integer> list = new ArrayList<>();\n\n    public LRUCache(int capacity) {\n        this.capacity = capacity;\n    }\n    \n    public int get(int key) {\n        // int idx = records.get(key);\n        list.remove(Integer.valueOf(key));\n        list.add(key);\n        // records.put(key, list.size()-1);\n        return map.getOrDefault(key, -1);\n    }\n    \n    public void put(int key, int value) {\n        if(capacity <= 0) {\n            int tempKey = list.get(0);\n            list.remove(0);\n            // records.remove(tempKey);\n            map.remove(tempKey);\n        }\n\n        map.put(key, value);\n        list.add(key);\n        // records.put(key, list.size()-1);\n        capacity--;\n    }\n}\n\n/**\n * Your LRUCache object will be instantiated and called as such:\n * LRUCache obj = new LRUCache(capacity);\n * int param_1 = obj.get(key);\n * obj.put(key,value);\n */","compare_result":"1111111111011100000000","title_slug":"lru-cache","has_notes":false,"flag_type":1}