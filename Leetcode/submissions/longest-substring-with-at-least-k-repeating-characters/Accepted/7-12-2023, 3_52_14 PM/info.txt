{"id":992577419,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1689157334,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/992577419/","is_pending":"Not Pending","title":"Longest Substring with At Least K Repeating Characters","memory":"40.4 MB","code":"class Solution {\n    public int longestSubstring(String s, int k) {\n        \n        // traversing to all the unique characters\n        int[] count = new int[26];\n        int max = 0;\n\n        for(int h = 1; h <= 26; h++) {\n            Arrays.fill(count, 0);\n            int i = 0, j = 0, unique = 0, greaterOrEqualToK = 0;\n\n            while(j < s.length()) {\n                char ch = s.charAt(j);\n\n                if(count[ch - 'a'] == 0) unique++;\n\n                count[ch - 'a']++;\n\n                if(count[ch - 'a'] == k) greaterOrEqualToK++;\n\n                j++;\n\n                while(unique > h) {\n                    char ch1 = s.charAt(i);\n\n                    if(count[ch1 - 'a'] == k) greaterOrEqualToK--;\n\n                    count[ch1 - 'a']--;\n\n                    if(count[ch1 - 'a'] == 0) unique--;\n\n                    i++;\n                }\n\n                if(unique == greaterOrEqualToK)\n                max = Math.max(max, j - i);\n            }\n        }\n\n        return max;\n    }\n}","compare_result":"1111111111111111111111111111111111111","title_slug":"longest-substring-with-at-least-k-repeating-characters","has_notes":false,"flag_type":1}