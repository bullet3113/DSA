{"id":942284811,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1682887548,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/942284811/","is_pending":"Not Pending","title":"Combination Sum III","memory":"N/A","code":"class Solution {\n    public List<List<Integer>> combinationSum3(int k, int n) {\n        List<List<Integer>> list = new ArrayList<>();\n        helper(k, n, list, 1, new ArrayList<>());\n        return list;\n    }\n\n    void helper(int k, int n, List<List<Integer>> list, int i, List<Integer> temp) {\n        if(k == 0) {\n            if(n == 0) {\n                Collections.sort(temp);\n                if(!list.contains(temp))\n                list.add(new ArrayList<>(temp));\n            }\n            return;\n        }\n\n        for(int start = i; start <= 9; start++) {\n            if(temp.size() > 0 && temp.get(temp.size()-1) == start) continue;\n            temp.add(start);\n            helper(k-1, n-start, list, i+1, temp);\n            temp.remove(temp.size() - 1);\n        }\n    }\n}","compare_result":"111111111100110001","title_slug":"combination-sum-iii","has_notes":false,"flag_type":1}