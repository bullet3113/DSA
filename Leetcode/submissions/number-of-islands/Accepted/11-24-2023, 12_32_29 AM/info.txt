{"id":1105030510,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1700766149,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1105030510/","is_pending":"Not Pending","title":"Number of Islands","memory":"47.5 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        \n        int n = grid.length;\n        int m = grid[0].length;\n        int ans = 0;\n\n        boolean[][] vis = new boolean[n][m];\n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n                if(!vis[i][j] && grid[i][j] == '1') {\n                    helper(grid, i, j, vis);\n                    ans++;\n                }\n            }\n        }\n\n        return ans;\n    }\n\n    void helper(char[][] grid, int i, int j, boolean[][] vis) {\n\n        if(i < 0 || j < 0 || i >= grid.length || j >= grid[0].length || vis[i][j] || grid[i][j] == '0') return;\n\n        vis[i][j] = true;\n\n        helper(grid, i+1, j, vis);\n        helper(grid, i-1, j, vis);\n        helper(grid, i, j+1, vis);\n        helper(grid, i, j-1, vis);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}