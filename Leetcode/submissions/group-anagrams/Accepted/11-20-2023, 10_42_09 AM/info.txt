{"id":1102493603,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1700457129,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/1102493603/","is_pending":"Not Pending","title":"Group Anagrams","memory":"46.6 MB","code":"class Solution {\n    public List<List<String>> groupAnagrams(String[] strs) {\n        \n        Map<String, List<String>> map = new HashMap<>();\n\n        for(int i = 0; i < strs.length; i++) {\n\n            String word = strs[i];\n            char[] chars = word.toCharArray();\n            Arrays.sort(chars);\n            String sortedWord = String.valueOf(chars);\n\n            if(!map.containsKey(sortedWord)) {\n                map.put(sortedWord, new ArrayList<>());\n            }\n\n            map.get(sortedWord).add(word);\n        }\n\n        return new ArrayList<>(map.values());\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}