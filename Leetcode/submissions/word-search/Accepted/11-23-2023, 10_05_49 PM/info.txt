{"id":1104945183,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1700757349,"status":10,"status_display":"Accepted","runtime":"843 ms","url":"/submissions/detail/1104945183/","is_pending":"Not Pending","title":"Word Search","memory":"43.9 MB","code":"class Solution {\n    public boolean exist(char[][] board, String word) {\n        \n        int n = word.length();\n        int row = board.length;\n        int col = board[0].length;\n\n        for(int i = 0; i < row; i++) {\n            for(int j = 0; j < col; j++) {\n                char ch = word.charAt(0);\n                if(ch == board[i][j] && helper(board, word, \"\", n, row, col, i, j, 0, new boolean[row][col])) return true; \n            }\n        }\n        return false;\n    }\n\n    boolean helper(char[][] board, String word, String p, int n, int row, int col, int i, int j, int index, boolean[][] vis) {\n        \n        if(index == n) return true;\n        if(i >= row || j >= col || i < 0 || j < 0 || vis[i][j] || word.charAt(index) != board[i][j]) return false;\n        // System.out.println(p);\n        \n\n        vis[i][j] = true;\n\n        boolean up = helper(board, word, p + board[i][j], n, row, col, i-1, j, index+1, vis);\n        boolean down = helper(board, word, p + board[i][j], n, row, col, i+1, j, index+1, vis);\n        boolean left = helper(board, word, p + board[i][j], n, row, col, i, j-1, index+1, vis);\n        boolean right = helper(board, word, p + board[i][j], n, row, col, i, j+1, index+1, vis);\n\n        vis[i][j] = false;\n\n        return up || down || left || right;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"word-search","has_notes":false,"flag_type":1}