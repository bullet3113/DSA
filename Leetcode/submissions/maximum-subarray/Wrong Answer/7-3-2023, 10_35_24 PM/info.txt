{"id":985484223,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1688403924,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/985484223/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\n    public int maxSubArray(int[] nums) {\n        int n = nums.length;\n        int ans = 0;\n\n        if(n == 1) return nums[0];\n        int sum = 0;\n        for(int i = 0; i < n; i++) {\n            int temp = sum + nums[i];\n            if(temp > sum) {\n                sum += nums[i];  \n            } else if(temp < sum && temp > 0) sum += nums[i];\n            else if(temp < 0) sum = 0;\n\n            if(ans < sum) ans = sum;\n        }\n        return ans;\n    }\n}","compare_result":"111111001100110011010111111111110111111111011110111111111011111111111110101111111111111101111110011011011111111011110011111111111111110011111111111110111111111111101101011111101111101111111111111110111111111101","title_slug":"maximum-subarray","has_notes":false,"flag_type":1}