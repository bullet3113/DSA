{"id":941480421,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1682761934,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/941480421/","is_pending":"Not Pending","title":"Generate Parentheses","memory":"42.7 MB","code":"class Solution {\n    public List<String> generateParenthesis(int n) {\n        List<String> x = new ArrayList<>();\n        helper(n, n, x, \"\", n*2);\n        return x;\n    }\n\n    void helper(int n, int m, List<String> x, String p, int l) {\n        if(p.length() == l) {\n            // if(!x.contains(p))\n            x.add(p);\n            return;\n        }\n \n\n        if(n > 0 && n <= m)\n        helper(n-1, m, x, p+\"(\", l);\n        if(m > 0 && m >= n)\n        helper(n, m-1, x, p + \")\", l);\n    }\n}","compare_result":"11111111","title_slug":"generate-parentheses","has_notes":false,"flag_type":1}