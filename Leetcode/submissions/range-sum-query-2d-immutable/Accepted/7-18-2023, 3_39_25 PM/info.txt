{"id":997459681,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1689674965,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/997459681/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"65.3 MB","code":"class NumMatrix {\n\n    int[][] mat;\n    public NumMatrix(int[][] matrix) {\n        // creating prefix sum column wise\n        int n = matrix.length;\n        int m = matrix[0].length;\n\n        mat = new int[n][m];\n\n        for(int i = 0; i < n; i++) {\n            int sum = 0;\n            for(int j = 0; j < m; j++) {\n                sum += matrix[i][j];\n                mat[i][j] = sum;\n            }\n        }\n    }\n    \n    public int sumRegion(int row1, int col1, int row2, int col2) {\n        \n        int sum = 0;\n        // handling the query\n        \n        for(int i = row1; i <= row2; i++) {\n            if(col1 == 0) sum += mat[i][col2];\n            else sum += mat[i][col2] - mat[i][col1-1];\n        }\n        return sum;\n    }\n}\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix obj = new NumMatrix(matrix);\n * int param_1 = obj.sumRegion(row1,col1,row2,col2);\n */","compare_result":"1111111111111111111111","title_slug":"range-sum-query-2d-immutable","has_notes":false,"flag_type":1}