{"id":989056947,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1688795191,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/989056947/","is_pending":"Not Pending","title":"Count Number of Nice Subarrays","memory":"51.9 MB","code":"class Solution {\r\n    public int numberOfSubarrays(int[] nums, int k) {\r\n        // converting the problem to BINARY SUBARRAY WITH SUM   \r\n        return helper(nums, k) - helper(nums, k - 1);\r\n    }\r\n\r\n    int helper(int nums[], int k) {\r\n\r\n        int n = nums.length;\r\n        int max = 0;\r\n\r\n        int j = 0; // first pointer\r\n        int sum = 0;\r\n\r\n        for(int i = 0; i < n; i++) {\r\n            if(nums[i] % 2 == 1) sum += 1; // decrease k if any odd number found\r\n            else sum += 0;\r\n\r\n            while(sum > k && j <= i) {\r\n                if(nums[j] % 2 == 1) sum -= 1;\r\n                j++;\r\n            }\r\n\r\n            max += (i - j + 1) ;\r\n        }\r\n        return max;\r\n    }\r\n}","compare_result":"11111111111111111111111111111111111111","title_slug":"count-number-of-nice-subarrays","has_notes":false,"flag_type":1}