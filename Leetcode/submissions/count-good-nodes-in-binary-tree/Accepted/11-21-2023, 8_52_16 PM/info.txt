{"id":1103528464,"lang":"java","lang_name":"Java","time":"2 weeks, 1 day","timestamp":1700580136,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1103528464/","is_pending":"Not Pending","title":"Count Good Nodes in Binary Tree","memory":"50 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n\n    public int goodNodes(TreeNode root) {\n        \n        return goodNodes(root, Integer.MIN_VALUE);\n    }\n\n    public int goodNodes(TreeNode root, int max) {\n\n        if(root == null) return 0;\n\n        \n        int count = 0;\n        if(root.val >= max) count = 1;\n        max = Math.max(max, root.val);\n        // System.out.print(max + \" \" + root.val);\n        return goodNodes(root.left, max) + goodNodes(root.right, max) + count;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-good-nodes-in-binary-tree","has_notes":false,"flag_type":1}