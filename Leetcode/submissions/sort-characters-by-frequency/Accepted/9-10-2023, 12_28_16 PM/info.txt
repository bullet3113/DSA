{"id":1045431170,"lang":"java","lang_name":"Java","time":"2 months, 4 weeks","timestamp":1694329096,"status":10,"status_display":"Accepted","runtime":"384 ms","url":"/submissions/detail/1045431170/","is_pending":"Not Pending","title":"Sort Characters By Frequency","memory":"44.8 MB","code":"class Solution {\n    public String frequencySort(String s) {\n        int n = s.length();\n        pair[] freq = new pair[130];\n        for(int i = 0; i < 130; i++) freq[i] = new pair('!', -1);\n        for(int i = 0; i < n; i++) {\n            char c = s.charAt(i);\n\n            if(freq[c].ch == '!') freq[c] = new pair(c, 0);\n            freq[c].f++;\n        }\n\n        Arrays.sort(freq, (a, b) -> {\n            return b.f - a.f;\n        });\n\n        String ans = \"\";\n\n        for(int i = 0; i < 130; i++) {\n            char c = freq[i].ch;\n            int f = freq[i].f;\n\n            while(f > 0) {\n                ans += c;\n                f--;\n            }\n        }\n\n        return ans;\n    }\n}\n\nclass pair {\n    char ch;\n    int f;\n\n    public pair(char ch, int f) {\n        this.ch = ch;\n        this.f = f;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"sort-characters-by-frequency","has_notes":false,"flag_type":1}