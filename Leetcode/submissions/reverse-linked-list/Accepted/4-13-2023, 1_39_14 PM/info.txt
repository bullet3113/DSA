{"id":932955111,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1681373354,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/932955111/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"42.3 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        if (head == null || head.next == null)  \n{  \nreturn head;  \n}  \n  \n// reverse the rest (r) of the list and place  \n// the first element of the list at the last   \nListNode r = reverseList(head.next);  \nhead.next.next = head;  \n  \n  \nhead.next = null;  \n  \n// fixing the head pointer  \nreturn r; \n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}