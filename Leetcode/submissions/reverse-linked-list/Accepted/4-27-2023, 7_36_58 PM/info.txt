{"id":940622413,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1682604418,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/940622413/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"42.7 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode reverseList(ListNode head) {\n        \n        // creating a dummy node to track previous node\n        ListNode prev = null;\n\n        while(head != null) {\n            // storing next node in a temp node\n            ListNode temp = head.next;\n            // initializing current head.next to previous node\n            head.next = prev;\n            // intitalizing current node to prev node\n            prev = head;\n            // storing original next node to head\n            head = temp;\n        }\n\n        return prev;\n    }\n}","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}