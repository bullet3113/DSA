{"id":1102552276,"lang":"java","lang_name":"Java","time":"2 weeks, 3 days","timestamp":1700464102,"status":10,"status_display":"Accepted","runtime":"31 ms","url":"/submissions/detail/1102552276/","is_pending":"Not Pending","title":"3Sum","memory":"50.1 MB","code":"class Solution {\n    public List<List<Integer>> threeSum(int[] nums) {\n\n        List<List<Integer>> list = new ArrayList<>();\n\n        \n        int n = nums.length;\n        Arrays.sort(nums);\n\n        for(int i = 0; i < n; i++) {\n            if(i > 0 && nums[i] == nums[i-1]) continue;\n\n            int j = i + 1;\n            int k = n - 1;\n\n            while (j < k) {\n\n                int sum = nums[i] + nums[j] + nums[k];\n\n                if(sum == 0) {\n                    list.add(Arrays.asList(nums[i], nums[j], nums[k]));\n\n                    // avoiding duplicates\n                    while(j < k && nums[j] == nums[j+1]) j++;\n                    while(j < k && nums[k] == nums[k-1]) k--;\n\n                    j++;\n                    k--;\n\n                } else if(sum > 0) k--;\n                else j++;\n            }\n\n            \n        }return list;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum","has_notes":false,"flag_type":1}