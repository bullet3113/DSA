{"id":999851298,"lang":"java","lang_name":"Java","time":"4 months, 2 weeks","timestamp":1689911488,"status":10,"status_display":"Accepted","runtime":"275 ms","url":"/submissions/detail/999851298/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"56 MB","code":"class Solution {\n    public int largestRectangleArea(int[] heights) {\n        int max = Integer.MIN_VALUE;\n        int[] nse = NSE(heights);\n        int[] pse = PSE(heights);\n\n        for(int i = 0; i < heights.length; i++) {\n            int temp = nse[i] - pse[i] - 1;\n            // if((temp * heights[i]) > max) {\n            //     max = temp * heights[i];\n            // }\n\n            max = Math.max(max, (temp * heights[i]));\n        }\n\n        return max;\n    }\n\n    int[] NSE(int[] arr) {\n        int n = arr.length;\n\n        int nse[] = new int[n];\n        nse[n-1] = n;\n        Stack<Integer> stack = new Stack<>();\n        stack.push(n-1);\n        \n        for(int i = n-2; i >= 0; i--) {\n            int temp = arr[i];\n\n            while(!stack.isEmpty() && arr[stack.peek()] >= temp) stack.pop();\n\n            if(stack.empty()) nse[i] = n;\n            else nse[i] = stack.peek();\n\n            stack.push(i);\n        }\n\n        return nse;\n    }\n\n\n    int[] PSE(int[] arr) {\n        int n = arr.length;\n\n        int pse[] = new int[n];\n        pse[0] = -1;\n        Stack<Integer> stack = new Stack<>();\n        stack.push(0);\n        \n        for(int i = 1; i < n; i++) {\n            int temp = arr[i];\n\n            while(!stack.isEmpty() && arr[stack.peek()] >= temp) stack.pop();\n\n            if(stack.empty()) pse[i] = -1;\n            else pse[i] = stack.peek();\n\n            stack.push(i);\n        }\n\n        return pse;\n    }\n\n    // int PSE(int[] arr, int i) {\n    //     // Stack<Integer> stack = new Stack<>();\n    //     int temp = arr[i];\n    //     i--;\n    //     for(; i >= 0; i--) {\n    //         if(arr[i] < temp) {\n    //             return i;\n    //         }\n    //     }\n\n    //     return -1;\n    // }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}