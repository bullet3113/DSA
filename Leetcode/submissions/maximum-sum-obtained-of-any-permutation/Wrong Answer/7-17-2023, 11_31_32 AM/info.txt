{"id":996424580,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1689573692,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/996424580/","is_pending":"Not Pending","title":"Maximum Sum Obtained of Any Permutation","memory":"N/A","code":"class Solution {\n    public int maxSumRangeQuery(int[] nums, int[][] requests) {\n        \n        int n = nums.length;\n        int[] pref = new int[n];\n\n        for(int[] req: requests) {\n            int l = req[0];\n            int r = req[1];\n\n            pref[l]++;\n            if(r+1 < n) pref[r + 1]--;\n        }\n\n        // prefix sum\n        for(int i = 1; i < n; i++) pref[i] += pref[i-1];\n\n        // sorting both \n        Arrays.sort(pref);\n        Arrays.sort(nums);\n\n        int sum = 0;\n        int mod = (int)10e9+7;\n        for(int i = 0; i < n; i++) {\n            sum = sum % mod + (pref[i] * nums[i]) % mod;\n        }\n        return sum;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111110000000100000000","title_slug":"maximum-sum-obtained-of-any-permutation","has_notes":false,"flag_type":1}