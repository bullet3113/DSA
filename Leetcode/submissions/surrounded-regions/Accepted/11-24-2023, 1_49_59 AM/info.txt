{"id":1105066568,"lang":"java","lang_name":"Java","time":"1 week, 6 days","timestamp":1700770799,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/1105066568/","is_pending":"Not Pending","title":"Surrounded Regions","memory":"44 MB","code":"class Solution {\n    public void solve(char[][] board) {\n        \n        int n = board.length;\n        int m = board[0].length;\n\n        boolean[][] vis = new boolean[n][m];\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n\n                if((i == 0 || i == n-1 || j == 0 || j == m-1) && !vis[i][j] && board[i][j] == 'O') {\n                    helper(board, i, j, vis);\n                }\n            }\n        }\n\n        for(int i = 0; i < n; i++) {\n            for(int j = 0; j < m; j++) {\n\n                if((i != 0 || i != n-1 || j != 0 || j != m-1) && !vis[i][j] && board[i][j] == 'O') {\n                    board[i][j] = 'X';\n                }\n            }\n        }\n    }\n\n    void helper(char[][] board, int i, int j, boolean[][] vis) {\n\n        if(i < 0 || j < 0 || i >= board.length || j >= board[0].length || vis[i][j] || board[i][j] == 'X') return;\n\n        vis[i][j] =  true;\n        helper(board, i+1, j, vis);\n        helper(board, i-1, j, vis);\n        helper(board, i, j+1, vis);\n        helper(board, i, j-1, vis);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"surrounded-regions","has_notes":false,"flag_type":1}