{"id":995032535,"lang":"java","lang_name":"Java","time":"4 months, 3 weeks","timestamp":1689423293,"status":10,"status_display":"Accepted","runtime":"37 ms","url":"/submissions/detail/995032535/","is_pending":"Not Pending","title":"Make Sum Divisible by P","memory":"58 MB","code":"class Solution {\n    public int minSubarray(int[] nums, int p) {\n        \n\t\t\t\tlong sum = 0;\n        for(int num : nums) {\n            sum = (sum + num) % p; // For large numbers using p as mod\n        }\n        \n        if(sum % p == 0) {\n            return 0;\n        }\n        \n        int rem = ((int)sum % p + p) % p;      // The remainder to remove\n        Map<Integer, Integer> map = new HashMap<>();\n        int n = nums.length;\n        int len = n;\n        long pSum = 0;\n        \n        map.put(0, -1);\n        for(int i = 0; i < n; i ++) {\n            \n            pSum = (pSum + nums[i]) % p;    // For large numbers using p as mod\n            // int currRem = ((int)pSum % p + p) % p;\n            map.put((int)pSum, i);\n            \n            int remToSearch = (((int)pSum - (int)sum) % p + p) % p;\n            if(map.containsKey(remToSearch)) {\n                len = Math.min(len, i - map.get(remToSearch));\n            }\n            \n        }\n        \n        if(len == n) {\n            return -1;\n        }\n        return len;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"make-sum-divisible-by-p","has_notes":false,"flag_type":1}