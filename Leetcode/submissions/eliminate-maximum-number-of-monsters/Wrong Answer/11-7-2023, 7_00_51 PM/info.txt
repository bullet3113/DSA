{"id":1093618650,"lang":"java","lang_name":"Java","time":"4 weeks, 1 day","timestamp":1699363851,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1093618650/","is_pending":"Not Pending","title":"Eliminate Maximum Number of Monsters","memory":"N/A","code":"class Solution {\n    public int eliminateMaximum(int[] dist, int[] speed) {\n        \n        int max = 1;\n        int countMinute = 1;\n        int n = dist.length;\n\n        int[] time = new int[n];\n\n        for(int i = 0; i < n; i++) {\n            time[i] = dist[i] / speed[i];\n        }\n\n        Arrays.sort(time);\n\n        for(int i = 1; i < n; i++) {\n            if(time[i] > countMinute) {\n                max++;\n                countMinute++;\n            } else break;\n        }\n\n        return max;\n    }\n}\n\n// n = monsters\n\n// distance array\n\n// d[i] = distance of ith monster from the city\n\n// speed array\n\n// s[i] = speed of ith monster approaching to the city km/minute\n\n// weapon takes one minute to charge\n// fully charge initially\n\n// if weapon charge at same point monster reaches to city then it will lose\n\n// return max monster to eliminate from entering city","compare_result":"11111111101111111111111011111100111001110111111110111111111111111111110010101110001111101011111111111111111011110111111111111111110","title_slug":"eliminate-maximum-number-of-monsters","has_notes":false,"flag_type":1}