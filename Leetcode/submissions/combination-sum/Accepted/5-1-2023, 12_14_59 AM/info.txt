{"id":942242700,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1682880299,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/942242700/","is_pending":"Not Pending","title":"Combination Sum","memory":"43.1 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List<List<Integer>> list = new ArrayList<>();\n        helper(0, candidates, target, list, new ArrayList<>());\n        return list;\n    }\n\n    void helper(int i, int[] arr, int sum, List<List<Integer>> list, List<Integer> temp) {\n        \n\n        if(i == arr.length) {\n            if(sum == 0) {\n                list.add(new ArrayList<>(temp));\n            }\n            return;\n        }\n\n            if(sum > 0 && arr[i] <= sum)\n            {temp.add(arr[i]);\n            helper(i, arr, sum - arr[i], list, temp);\n            temp.remove(temp.size()-1);}\n        helper(i+1, arr, sum, list, temp);}\n    \n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}