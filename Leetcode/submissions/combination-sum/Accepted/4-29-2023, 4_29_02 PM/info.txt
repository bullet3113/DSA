{"id":941502260,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1682765942,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/941502260/","is_pending":"Not Pending","title":"Combination Sum","memory":"42.8 MB","code":"class Solution {\n    public List<List<Integer>> combinationSum(int[] candidates, int target) {\n        List<List<Integer>> list = new ArrayList<>();\n        helper(list, candidates, target, 0, new ArrayList<>());\n        return list;\n    }\n\n    void helper(List<List<Integer>> list, int[] arr, int sum, int i, List<Integer> temp) {\n        if(i >= arr.length) {\n            if(sum == 0) {\n                list.add(new ArrayList<>(temp));\n                return;\n            }\n\n            return;\n        }\n\n        if(sum < 0)\n            return;\n\n        if(sum == 0) {\n            list.add(new ArrayList<>(temp));\n            return;\n        }\n\n        for(int s = i; s < arr.length; s++) {\n            temp.add(arr[s]);\n            helper(list, arr, sum - arr[s], s, temp);\n            temp.remove(temp.size()-1);\n        }\n\n        \n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"combination-sum","has_notes":false,"flag_type":1}