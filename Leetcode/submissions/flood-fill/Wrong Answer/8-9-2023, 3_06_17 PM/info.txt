{"id":1016454183,"lang":"java","lang_name":"Java","time":"3 months, 4 weeks","timestamp":1691573777,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1016454183/","is_pending":"Not Pending","title":"Flood Fill","memory":"N/A","code":"class Solution {\n    public int[][] floodFill(int[][] image, int sr, int sc, int color) {\n        \n        int n = image.length;\n        int m = image[0].length;\n\n        int mat[][] = new int[n][m];\n\n        helper(image, sr, sc, color, mat, image[sr][sc]);\n\n        return image;\n    }\n\n    void helper(int[][] image, int sr, int sc, int color, int[][] mat, int init) {\n        \n        if(sr < 0 || sc < 0 || sr >= image.length || sc >= image[0].length || image[sr][sc] < init || image[sr][sc] == color) {\n            return;\n        }\n        \n        // if(sr == image.length-1 && sc == image[0].length-1) {\n        //     mat[sr][sc] = color;\n        //     return;\n        // }\n\n        image[sr][sc] = color;\n\n        helper(image, sr + 1, sc, color, mat, init);\n        helper(image, sr - 1, sc, color, mat, init);\n        helper(image, sr, sc + 1, color, mat, init);\n        helper(image, sr, sc - 1, color, mat, init);\n    }\n}","compare_result":"1111100010011001101010101011101110001000100110011010101010111011100010001001100110101010101110111000100010011001101010101011101111001100110111011110111011111111110011001101110111101110111111111100110011011101111011101111111111001100110111011110111011111111111000000000000000010","title_slug":"flood-fill","has_notes":false,"flag_type":1}