{"id":1092571633,"lang":"java","lang_name":"Java","time":"1Â month","timestamp":1699250521,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1092571633/","is_pending":"Not Pending","title":"Split Array Largest Sum","memory":"40.2 MB","code":"class Solution {\n    public int splitArray(int[] nums, int k) {\n        int n = nums.length;\n\n        int i = 0;\n        int j = 0;\n        for(int val: nums) j += val;\n        int ans = 0;\n        while(i <= j) {\n\n            int mid = i + (j - i) / 2;\n\n            if(isPossible(nums, n, k, mid)) {\n                ans = mid;\n                j = mid - 1;\n            } else {\n                i = mid + 1;\n            }\n        }\n\n        return ans;\n    }\n\n    boolean isPossible(int[] nums, int n, int k, int mid) {\n\n        int elementCount = 1;\n        int sum = mid;\n\n        for(int i = 0; i < n; i++) {\n            if(nums[i] <= sum) {\n                sum -= nums[i];\n            } else {\n                elementCount++;\n                sum = mid - nums[i];\n\n                if(sum < 0 || elementCount > k) return false;\n            }\n        }\n\n        return true;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"split-array-largest-sum","has_notes":false,"flag_type":1}