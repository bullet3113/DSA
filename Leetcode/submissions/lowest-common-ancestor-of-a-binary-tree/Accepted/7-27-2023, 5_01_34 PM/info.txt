{"id":1005274895,"lang":"java","lang_name":"Java","time":"4 months, 1 week","timestamp":1690457494,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1005274895/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Tree","memory":"43.9 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode(int x) { val = x; }\n * }\n */\nclass Solution {\n    public TreeNode lowestCommonAncestor(TreeNode root, TreeNode p, TreeNode q) {\n        if(root == null) return root;\n\n        if(root.val == p.val || root.val == q.val) return root;\n\n        TreeNode left = lowestCommonAncestor(root.left, p, q);\n        TreeNode right = lowestCommonAncestor(root.right, p, q);\n\n        if(left != null && right != null) return root;\n        if(left != null) return left;\n        \n        return right;\n    }\n}","compare_result":"1111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-tree","has_notes":false,"flag_type":1}