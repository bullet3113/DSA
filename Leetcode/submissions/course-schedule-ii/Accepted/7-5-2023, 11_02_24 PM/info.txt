{"id":987137920,"lang":"java","lang_name":"Java","time":"5Â months","timestamp":1688578344,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/987137920/","is_pending":"Not Pending","title":"Course Schedule II","memory":"44.9 MB","code":"class Solution {\n    ArrayList<Integer> adj[];\n    public int[] findOrder(int n, int[][] prerequisites) {\n        adj = new ArrayList[n];\n\t\tif(helper(n, prerequisites)) {\n\t\t\tStack<Integer> st = new Stack<>();\n\t\t\tboolean[] vis = new boolean[n];\n\t\t\tint arr[] = new int[n];\n\t\t\tint check = Integer.MAX_VALUE;\n\t\t\tfor(int i = 0; i < n; i++) {\n\t\t\t\tif(!vis[i]) {\n\t\t\t\t\tdfs(st, i, vis);\n\t\t\t\t}\n\t\t\t\t// System.out.println(st.size());\n\t\t\t\t// if(st.size() == n)\n\t\t\t\t// {\n\t\t\t\t// \tint l = 0;\n\t\t\t\t// \tStack<Integer> st2 = new Stack<>();\n\t\t\t\t// \twhile(!st.isEmpty()) {\n\t\t\t\t// \tst2.push(st.pop());\n\t\t\t\t// }\n\n\t\t\t\t// \tif(st2.peek() < check) {\n\t\t\t\t// \t\twhile(!st2.isEmpty()) {\n\t\t\t\t// \tarr[l++] = st2.pop();\n\t\t\t\t// }\t\n\t\t\t\t// \t}\n\t\t\t\t\t\n\t\t\t\t// }\n\t\t\t}\n\t\t\t\n\t\t\t\n\t\t\tint i = 0;\n\t\t\t// System.out.println(st.size());\n\t\t\twhile(!st.isEmpty()) {\n\t\t\t\tarr[i++] = st.pop();\n\t\t\t}\n\n\t\t\treturn arr;\n\t\t} \n\n\t\treturn new int[]{};\n    }\n\n    void dfs(Stack<Integer> st, int src, boolean[] vis) {\n\t\tvis[src] = true;\n\t\t// System.out.println(src);\n\n\t\tfor(int i: adj[src]) {\n\t\t\tif(!vis[i]) dfs(st, i, vis);\n\t\t}\n\n\t\tst.push(src);\n\t}\n\n\tboolean helper(int n, int[][] prerequisites) {\n\t\t\n\t\tfor(int i = 0; i < n; i++) adj[i] = new ArrayList<Integer>();\n\t\tfor(int i = 0; i < prerequisites.length; i++) {\n\t\t\tadj[prerequisites[i][1]].add(prerequisites[i][0]);\n\t\t}\n\n\t\tQueue<Integer> q = new LinkedList<>();\n\t\tint[] indegree = new int[n];\n\n\t\t// storing values of indegrees\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tfor(int it : adj[i]) {\n\t\t\t\tindegree[it]++;\n\t\t\t}\n\t\t}\n\n\t\tfor(int i = 0; i < n; i++) {\n\t\t\tif(indegree[i] == 0) q.add(i);\n\t\t}\n\t\t\n\t\tArrayList<Integer> ans = new ArrayList<>();\n\t\n\t\twhile(!q.isEmpty()) {\n\t\t\tint dq = q.remove();\n\t\t\tans.add(dq);\n\n\t\t\tfor(int it : adj[dq]) {\n\t\t\t\tindegree[it]--;\n\t\t\t\tif(indegree[it] == 0) q.add(it);\n\t\t\t}\n\t\t}\n\n\t\tif(ans.size() == n) return true;\n\n\t\treturn false;\n\t}\n}","compare_result":"111111111111111111111111111111111111111111111","title_slug":"course-schedule-ii","has_notes":false,"flag_type":1}